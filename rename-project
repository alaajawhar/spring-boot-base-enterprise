#!/bin/bash

# Check if argument is provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 <replacement_string>"
    echo "Example: $0 my-new-project"
    exit 1
fi

REPLACEMENT="$1"
SEARCH_STRING="spring-boot-base"

echo "Replacing '$SEARCH_STRING' with '$REPLACEMENT' in all files and filenames..."

# Function to replace content in files
replace_in_files() {
    echo "Replacing content in files..."
    
    # Find all files (excluding directories) and replace content
    find . -type f -exec grep -l "$SEARCH_STRING" {} \; | while read -r file; do
        echo "  Updating content in: $file"
        # Use sed to replace content (works on both Linux and macOS)
        if [[ "$OSTYPE" == "darwin"* ]]; then
            # macOS
            sed -i '' "s/$SEARCH_STRING/$REPLACEMENT/g" "$file"
        else
            # Linux
            sed -i "s/$SEARCH_STRING/$REPLACEMENT/g" "$file"
        fi
    done
}

# Function to rename files and directories
rename_files() {
    echo "Renaming files and directories..."
    
    # Find all files and directories containing the search string
    # Process files first, then directories (bottom-up approach)
    find . -depth -name "*$SEARCH_STRING*" | while read -r item; do
        # Get directory and basename
        dir=$(dirname "$item")
        base=$(basename "$item")
        
        # Create new name
        new_name="${base//$SEARCH_STRING/$REPLACEMENT}"
        new_path="$dir/$new_name"
        
        if [ "$item" != "$new_path" ]; then
            echo "  Renaming: $item -> $new_path"
            mv "$item" "$new_path"
        fi
    done
}

replace_in_files
rename_files
echo
echo "Replacement completed successfully!"
echo "All instances of '$SEARCH_STRING' have been replaced with '$REPLACEMENT'"
